<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Background of close button when mouse is over-->
    <RadialGradientBrush x:Key="CloseButtonBackground">
        <GradientStop Color="#FFa7d9f5" Offset="0" />
        <GradientStop Color="#FFbee6fd" Offset="0.5" />
        <GradientStop Color="#FFd9f0fc" Offset="0.75" />
        <GradientStop Color="#FFE5E5E5" Offset="1.25" />
    </RadialGradientBrush>

    <!--Style of Button for Window closing-->
    <Style x:Key="ButtonStyleForWindowClosing" TargetType="{x:Type Button}">
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Content="关闭" Style="{StaticResource ToolTipStyle}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="bd" Background="Transparent" />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background"
                                    Value="{StaticResource CloseButtonBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background"
                                    Value="{StaticResource CloseButtonBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ControlTemplate of Popup Window-->
    <ControlTemplate x:Key="PopupWindowControlTemplate" TargetType="{x:Type Window}">
        <Grid Name="grdPopupWindow" Background="LightGray" RenderTransformOrigin="0.2,0.2">
            <Grid.RenderTransform>
                <ScaleTransform />
            </Grid.RenderTransform>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="32" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <!--Title bar-->
                <Border x:Name="borderTitle" Width="Auto" BorderThickness="0.5,0.5,0.5,0" BorderBrush="Gray">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="21" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="40" />
                        </Grid.ColumnDefinitions>
                        <!--Logo icon-->
                        <Border Grid.Column="1" x:Name="borderLogo" Margin="0,2,0,2" />
                        <!--Title text-->
                        <Label Grid.Column="2" VerticalAlignment="Center"
                               FontSize="{StaticResource DefaultFontSizeNormal}" FontWeight="Regular" FontFamily="Helvetica" Content="{TemplateBinding Title}" />
                        <!--Close button-->
                        <Button Grid.Column="3" x:Name="buttonClose" Width="22" Height="22" Style="{StaticResource ButtonStyleForWindowClosing}">
                            <Image Source="../Resources/Icons/ppw_close_button_48px.png" />
                        </Button>
                    </Grid>
                </Border>
                <!--Content-->
                <Border Grid.Row="1" Width="Auto" BorderThickness="0.5,0,0.5,0.5" BorderBrush="Gray">
                    <AdornerDecorator>
                        <ContentPresenter />
                    </AdornerDecorator>
                </Border>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="grdPopupWindow" Storyboard.TargetProperty="RenderTransform.ScaleX"
                                         From="0.95" To="1.0" Duration="0:0:0.5" AutoReverse="False" RepeatBehavior="1x" />
                        <DoubleAnimation Storyboard.TargetName="grdPopupWindow" Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         From="0.95" To="1.0" Duration="0:0:0.5" AutoReverse="False" RepeatBehavior="1x" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ControlTemplate of Login Window-->
    <ControlTemplate x:Key="LoginWindowControlTemplate" TargetType="{x:Type Window}">
        <Grid Name="grdLoginWindow" Background="LightGray" RenderTransformOrigin="0.2,0.2">
            <Grid.RenderTransform>
                <ScaleTransform />
            </Grid.RenderTransform>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="32" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <!--Title bar-->
                <Border x:Name="borderTitle" Width="Auto" BorderThickness="0" BorderBrush="Gray">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="21" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="40" />
                        </Grid.ColumnDefinitions>
                        <!--Logo icon-->
                        <Border Grid.Column="1" x:Name="borderLogo" Margin="0,2,0,2" />
                        <!--Title text-->
                        <Label Grid.Column="2" VerticalAlignment="Center"
                               FontSize="{StaticResource DefaultFontSizeNormal}" FontWeight="Regular" FontFamily="Helvetica" Content="{TemplateBinding Title}" />
                    </Grid>
                </Border>
                <!--Content-->
                <Border Grid.Row="1" Width="Auto" BorderThickness="0" BorderBrush="Gray">
                    <AdornerDecorator>
                        <ContentPresenter />
                    </AdornerDecorator>
                </Border>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="grdLoginWindow" Storyboard.TargetProperty="RenderTransform.ScaleX"
                                         From="0.95" To="1.0" Duration="0:0:0.5" AutoReverse="False" RepeatBehavior="1x" />
                        <DoubleAnimation Storyboard.TargetName="grdLoginWindow" Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         From="0.95" To="1.0" Duration="0:0:0.5" AutoReverse="False" RepeatBehavior="1x" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Style of pop-up Window-->
    <Style x:Key="PopupWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Template" Value="{StaticResource PopupWindowControlTemplate}"/>
    </Style>

    <!--Style of login Window-->
    <Style x:Key="LoginWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="Manual" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Template" Value="{StaticResource LoginWindowControlTemplate}"/>
    </Style>

</ResourceDictionary>